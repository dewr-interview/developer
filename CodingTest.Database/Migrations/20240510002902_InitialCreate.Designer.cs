// <auto-generated />
using System;
using CodingTest.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingTest.Database.Migrations
{
    [DbContext(typeof(CodingTestContext))]
    [Migration("20240510002902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CodingTest.Domain.Claimant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("GivenName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Mobile")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("ClaimantId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Claimant");
                });

            modelBuilder.Entity("CodingTest.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ABN")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("ACN")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<string>("TradingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id")
                        .HasName("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("CodingTest.Domain.Claimant", b =>
                {
                    b.HasOne("CodingTest.Domain.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CodingTest.Domain.Company", b =>
                {
                    b.OwnsMany("CodingTest.Domain.CompanyContact", "CompanyContacts", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("CompanyId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(false)
                                .HasColumnType("TEXT");

                            b1.Property<string>("FamilyName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("GivenName")
                                .HasMaxLength(50)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Mobile")
                                .HasMaxLength(10)
                                .IsUnicode(false)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Title")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id")
                                .HasName("CompanyContactId");

                            b1.HasIndex("CompanyId");

                            b1.ToTable("CompanyContact");

                            b1.WithOwner()
                                .HasForeignKey("CompanyId");
                        });

                    b.Navigation("CompanyContacts");
                });
#pragma warning restore 612, 618
        }
    }
}
